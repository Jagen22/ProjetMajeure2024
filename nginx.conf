events {
}

http {
    
  # Define a localserver listening on 80 port
  server {
    # Define the port where the local server listen
    listen 80;
    
    # Define a rule for the route /api
    # here all request to /game are redirected to http://localhost:8083;
    location /api{
        proxy_pass http://host.docker.internal:8083;
    }

    location / {
      proxy_pass http://host.docker.internal:5173;
    }

    location /Profile{
      rewrite ^/Profile/(.*)$ /$1 break;
      proxy_pass http://host.docker.internal:8050;
    }

    location /Post{
      rewrite ^/Post/(.*)$ /$1 break;
      proxy_pass http://host.docker.internal:8085;
    }

    location /CreateProfile{
      rewrite ^/CreateProfile/(.*)$ /$1 break;
      proxy_pass http://host.docker.internal:8060;
    }  
    
    location /History{
      rewrite ^/History/(.*)$ /$1 break;
      proxy_pass http://host.docker.internal:8084;
    }

    location /Prompt{
      rewrite ^/Prompt/(.*)$ /$1 break;
      proxy_pass http://host.docker.internal:8081;
    }



  location /Llama2{
    rewrite ^/Llama2/(.*)$ /$1 break;
      proxy_pass https://crawdad-superb-commonly.ngrok-free.app;
  }
  location /fooocus {
        proxy_pass http://54.83.81.52;
    }

    location /SocketIO {
      rewrite ^/SocketIO/(.*)$ /$1 break;
      proxy_pass http://host.docker.internal:3000;
    }
  location /Twitter{
      proxy_pass http://54.83.91.129;
    
  }

    # Define a rule for the route /my-api2
    # Here all requests to /my-api2 are redirected to http://192.168.10.40:8888
    # The URL is rewritten before being sent to the new server
    # e.g if the request "/my-api2/vehicle/45" is received by Nginx
    # the request is rewritten in "/vehicle/45" ("/my-api2" is removed) before being sent to the server http://192.168.10.40:8888
    #twitter : 54.172.40.224

    
    
    ##Define a rule for the route /socket.io
    #This is for socket.io
    #location /socket.io/ {
    #  proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
    #  proxy_set_header Host $host;

    #  proxy_pass http://host.docker.internal:3000;

    #  proxy_http_version 1.1;
    #  proxy_set_header Upgrade $http_upgrade;
    #  proxy_set_header Connection "upgrade";
    #}
    
  }
}